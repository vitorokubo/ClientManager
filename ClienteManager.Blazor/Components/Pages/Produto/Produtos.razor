@page "/produtos"
@using ClientManager.Application.DTOs
@using ClientManager.Application.Interfaces
@using ClientManager.Application.Services
@inject IProdutoService ProdutoService

<PageTitle>Produtos</PageTitle>

<p>
    <a href="/produtos/novo">Criar Novo Produtos</a>
</p>

@if (Produto == null)
{
    <p>Carregando Produto...</p>
}
else if (!Produto.Any())
{
    <p>Não há Produto cadastrados.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nome</th>
                <th>Editar</th>
                <th>Detalhes</th>
                <th>Deletar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cliente in Produto)
            {
                <tr>
                    <td>@cliente.Id</td>
                    <td>@cliente.Name</td>
                    <td>
                        <a href="/produtos/editar/@cliente.Id">Editar</a> 
                        
                    </td>
                    <td>
                        <a href="/produtos/detalhes/@cliente.Id">Detalhes</a>
                    </td>

                    <td>
                        <a href="/produtos/deletar/@cliente.Id">Deletar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ProdutoDTO> Produto;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Produto = await ProdutoService.GetProdutos();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar Produto: {ex.Message}");
        }
    }
}